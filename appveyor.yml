environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\scripts\\appveyor\\run_with_env.cmd"

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    - PYTHON: "C:\\Python27.10"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "32"

    #- PYTHON: "C:\\Python27.10-x64"
    #PYTHON_VERSION: "2.7.10"
    #PYTHON_ARCH: "64"

install:
    #- ECHO "Filesystem root:"
    #- ps: "ls \"C:/\""

    #- ECHO "Installed SDKs:"
    #- ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & scripts\appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  #- "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  - "%CMD_IN_ENV% pip install pyside pytest pytest-qt pytest-capturelog"
  - "%CMD_IN_ENV% pip install http://sourceforge.net/projects/py2exe/files/latest/download?source=files"

  - choco install -y InnoSetup
  - set PATH="C:\Program Files (x86)\Inno Setup 5";%PATH%

# Build is off because it is not applicable to python
build: off

test_script:
  # Run the project tests
  #  - "%CMD_IN_ENV% python setup.py nosetests"
     - "%CMD_IN_ENV% python setup.py develop"
     - "%PYTHON%\\Scripts\\py.test.exe tests"

after_test:
   - "%CMD_IN_ENV% python scripts\\py2exe_PySideApp.py py2exe"
   - "iscc scripts\\PySideApp_InnoSetup.iss"
   - ps: "ls scripts\\built-dist-PySideApp\\*.exe"
   - ps: "ls scripts\\windows_installer\\*.exe"

artifacts:
   - path: scripts\built-dist-PySideApp\*.exe
   - path: scripts\windows_installer\*.exe

#on_success:
#- ps: "ls scripts\\built-dist-PySideApp\\*"
#- ps: "ls scripts\\windows_installer\\*"
#- path: scripts\built-dist-PySideApp\*
